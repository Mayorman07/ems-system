# Application Name and Port
spring.application.name=ApiGateway
server.port=9082

# Eureka Client Configuration

eureka.client.register-with-eureka=true
eureka.instance.prefer-ip-address=true
eureka.client.service-url.defaultZone=${EUREKA_SERVER_URL:http://localhost:9010/eureka}


# --- PUBLIC ROUTES (MUST COME FIRST) ---

# Route for /employees/verify (no auth required)
spring.cloud.gateway.routes[0].id=employees-verify
spring.cloud.gateway.routes[0].uri=lb://employees
spring.cloud.gateway.routes[0].predicates[0]=Path=/employees/verify
spring.cloud.gateway.routes[0].predicates[1]=Method=POST,GET
spring.cloud.gateway.routes[0].filters[0]=RewritePath=/employees/(?<segment>.*), /${segment}
spring.cloud.gateway.routes[0].order=1

# Route for serving static verification pages
spring.cloud.gateway.routes[1].id=employees-static-pages
spring.cloud.gateway.routes[1].uri=lb://employees
spring.cloud.gateway.routes[1].predicates[0]=Path=/employees/*.html
spring.cloud.gateway.routes[1].predicates[1]=Method=GET
spring.cloud.gateway.routes[1].filters[0]=RewritePath=/employees/(?<file>.+\\.html), /${file}
spring.cloud.gateway.routes[1].order=2

# --- Actuator Configuration ---
# This exposes the gateway diagnostic endpoints
spring.cloud.loadbalancer.cache.enabled=false

# Route 2: POST /employees (create)
spring.cloud.gateway.routes[2].id=employees-create
spring.cloud.gateway.routes[2].uri=lb://employees
spring.cloud.gateway.routes[2].predicates[0]=Path=/employees/**
spring.cloud.gateway.routes[2].predicates[1]=Method=POST
spring.cloud.gateway.routes[2].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[2].filters[1]=RewritePath=/employees/(?<segment>.*), /$\{segment}
spring.cloud.gateway.routes[2].order=3

#Route for creating employees
spring.cloud.gateway.routes[3].id=employees
spring.cloud.gateway.routes[3].uri=lb://employees
spring.cloud.gateway.routes[3].predicates[0]=Path=/employees/**
#spring.cloud.gateway.routes[3].predicates[1]=Method=POST,GET
spring.cloud.gateway.routes[3].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[3].filters[1]=RewritePath=/employees/(?<segment>.*), /${segment}
spring.cloud.gateway.routes[3].order=3

#Route for H2
spring.cloud.gateway.routes[4].id=employees-h2-console
spring.cloud.gateway.routes[4].uri=lb://employees
spring.cloud.gateway.routes[4].predicates[0]=Path=/employees/h2-console
spring.cloud.gateway.routes[4].predicates[1]=Method=GET
spring.cloud.gateway.routes[4].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[4].filters[1]=RewritePath=/employees/(?<segment>.*), /$\{segment}
spring.cloud.gateway.routes[4].order=4

#Route for employee login
spring.cloud.gateway.routes[5].id=employees-login
spring.cloud.gateway.routes[5].uri=lb://employees
spring.cloud.gateway.routes[5].predicates[0]=Path=/employees/employees/login
spring.cloud.gateway.routes[5].predicates[1]=Method=POST
spring.cloud.gateway.routes[5].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[5].filters[1]=RewritePath=/employees/(?<segment>.*), /$\{segment}
spring.cloud.gateway.routes[5].order=5

#
spring.cloud.gateway.routes[6].id=employees-get-update-delete
spring.cloud.gateway.routes[6].uri=lb://employees
spring.cloud.gateway.routes[6].predicates[0]=Path=/employees/employees/**
spring.cloud.gateway.routes[6].predicates[1]=Method=GET,PUT,POST,DELETE
spring.cloud.gateway.routes[6].predicates[2]=Header=Authorization, Bearer (.*)
spring.cloud.gateway.routes[6].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[6].filters[1]=RewritePath=/employees/(?<segment>.*), /$\{segment}
spring.cloud.gateway.routes[6].order=6
##spring.cloud.gateway.routes[4].filters[2]=AuthorizationHeaderFilter
#
spring.cloud.gateway.routes[7].id=employees-actuator
spring.cloud.gateway.routes[7].uri=lb://employees
spring.cloud.gateway.routes[7].predicates[0]=Path=/employees/actuator/**
spring.cloud.gateway.routes[7].predicates[1]=Method=GET
spring.cloud.gateway.routes[7].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[7].filters[1]=RewritePath=/employees/(?<segment>.*), /$\{segment}
spring.cloud.gateway.routes[7].order=7
#
spring.cloud.gateway.routes[8].id=employees-get-update
spring.cloud.gateway.routes[8].uri=lb://employees
spring.cloud.gateway.routes[8].predicates[0]=Path=/employees/employees/**
spring.cloud.gateway.routes[8].predicates[1]=Method=GET,PUT,POST
spring.cloud.gateway.routes[8].predicates[2]=Header=Authorization, Bearer (.*)
spring.cloud.gateway.routes[8].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[8].filters[1]=RewritePath=/employees/(?<segment>.*), /$\{segment}
spring.cloud.gateway.routes[8].order=8
#spring.cloud.gateway.routes[8].filters[1]=AuthorizationHeaderFilter=ROLE_ADMIN,UPDATE

# Route 9: Creating initial admin
spring.cloud.gateway.routes[9].id=setup-initial-admin
spring.cloud.gateway.routes[9].uri=lb://employees
spring.cloud.gateway.routes[9].predicates[0]=Path=/setup/initial-admin
spring.cloud.gateway.routes[9].predicates[1]=Method=POST
spring.cloud.gateway.routes[9].filters[0]=SetPath=/api/setup/create-admin
spring.cloud.gateway.routes[9].filters[1]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[9].filters[2]=AddRequestHeader=Content-Type, application/json
spring.cloud.gateway.routes[9].order=9

# --- NEW PASSWORD RESET ROUTES ---

# Route 5: Request a password reset (sends email)
spring.cloud.gateway.routes[10].id=password-reset-request
spring.cloud.gateway.routes[10].uri=lb://employees
spring.cloud.gateway.routes[10].predicates[0]=Path=/employees/password-reset/request
spring.cloud.gateway.routes[10].predicates[1]=Method=POST
spring.cloud.gateway.routes[10].filters[0]=RewritePath=/employees/(?<segment>.*), /${segment}
spring.cloud.gateway.routes[10].order=10

# Route 7: Perform the password reset (submits new password)
spring.cloud.gateway.routes[11].id=password-reset-perform
spring.cloud.gateway.routes[11].uri=lb://employees
spring.cloud.gateway.routes[11].predicates[0]=Path=/employees/password-reset/reset
spring.cloud.gateway.routes[11].predicates[1]=Method=POST
spring.cloud.gateway.routes[11].filters[0]=RewritePath=/employees/(?<segment>.*), /${segment}
spring.cloud.gateway.routes[11].order=11

spring.cloud.gateway.default-filters[0].name=AddRequestHeader
spring.cloud.gateway.default-filters[0].args.name=Content-Type
spring.cloud.gateway.default-filters[0].args.value=application/json

token.secret.key=Rm9ydGhpc2xpZmVpY2Fubm90Y2hhbmdlaGlkZGVuaGlsbHNkZWVwb2ZpbnRoZW1hemU=

#for actuator
management.endpoint.gateway.enabled=true
management.endpoints.web.exposure.include=gateway,health,beans,mappings,info
management.endpoint.health.show-details=always


# ===============================
# RABBITMQ CONFIGURATION
# ===============================
spring.rabbitmq.host=${SPRING_RABBITMQ_HOST:localhost}
spring.rabbitmq.port=${SPRING_RABBITMQ_PORT:5672}
spring.rabbitmq.username=${SPRING_RABBITMQ_USERNAME:Ems_Mayorman}
spring.rabbitmq.password=${SPRING_RABBITMQ_PASSWORD:Ems_guest}
spring.rabbitmq.virtual-host=${SPRING_RABBITMQ_VHOST:ems_vhost}



logging.level.org.springframework.cloud.gateway=DEBUG


#EC2 Eureka
#eureka.client.service-url.defaultZone=${EUREKA_URI:http://Mayorman:test@localhost:8010/eureka}

#for legacy
#spring.config.use-legacy-processing=true